{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omen\\\\Desktop\\\\Medicines track system\\\\src\\\\components\\\\SimpleCalendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SimpleCalendar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimpleCalendar = ({\n  medicines,\n  onEventToggle,\n  completedEvents = new Set()\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  // Генерируем события календаря на основе лекарств\n  useEffect(() => {\n    const events = [];\n    medicines.forEach(medicine => {\n      if (!medicine.isActive) return;\n      const startDate = new Date(medicine.startDate);\n      const endDate = new Date(medicine.endDate);\n      const currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        medicine.timeOfDay.forEach(time => {\n          events.push({\n            id: `${medicine.id}-${currentDate.toISOString().split('T')[0]}-${time}`,\n            date: new Date(currentDate),\n            medicineId: medicine.id,\n            medicineName: medicine.name,\n            dosage: medicine.dosage,\n            timeOfDay: time,\n            isCompleted: false\n          });\n        });\n\n        // Переходим к следующему дню\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n    });\n    setCalendarEvents(events);\n  }, [medicines]);\n  const getEventsForDate = date => {\n    return calendarEvents.filter(event => event.date.toDateString() === date.toDateString());\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString('ru-RU', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  const getDaysInMonth = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDay = firstDay.getDay(); // 0 for Sunday, 1 for Monday, etc.\n\n    const days = [];\n\n    // Adjust startingDay for Monday as first day of week (0 for Sunday, 1 for Monday)\n    const adjustedStartingDay = startingDay === 0 ? 6 : startingDay - 1;\n\n    // Добавляем пустые дни в начале месяца\n    for (let i = 0; i < adjustedStartingDay; i++) {\n      days.push(null);\n    }\n\n    // Добавляем дни месяца\n    for (let i = 1; i <= daysInMonth; i++) {\n      days.push(new Date(year, month, i));\n    }\n    return days;\n  };\n  const getMonthName = date => {\n    return date.toLocaleDateString('ru-RU', {\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() - 1, 1));\n  };\n  const goToNextMonth = () => {\n    setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() + 1, 1));\n  };\n  const handleDateClick = date => {\n    setSelectedDate(date);\n  };\n  const handleEventToggle = eventId => {\n    onEventToggle(eventId);\n  };\n  const getMedicineColor = medicineId => {\n    const colors = ['#667eea',\n    // синий\n    '#10b981',\n    // зеленый\n    '#f59e0b',\n    // оранжевый\n    '#ef4444',\n    // красный\n    '#8b5cf6',\n    // фиолетовый\n    '#06b6d4',\n    // голубой\n    '#84cc16',\n    // лаймовый\n    '#f97316',\n    // оранжевый\n    '#ec4899',\n    // розовый\n    '#14b8a6' // бирюзовый\n    ];\n    const medicineIndex = medicines.findIndex(m => m.id === medicineId);\n    return colors[medicineIndex % colors.length];\n  };\n  const getDayEvents = date => {\n    return getEventsForDate(date);\n  };\n  const getUniqueMedicinesForDay = date => {\n    const dayEvents = getEventsForDate(date);\n    const uniqueMedicines = new Map();\n    dayEvents.forEach(event => {\n      if (!uniqueMedicines.has(event.medicineId)) {\n        const medicineEvents = dayEvents.filter(e => e.medicineId === event.medicineId);\n        const completedCount = medicineEvents.filter(e => completedEvents.has(e.id)).length;\n        uniqueMedicines.set(event.medicineId, {\n          id: event.medicineId,\n          name: event.medicineName,\n          color: getMedicineColor(event.medicineId),\n          completed: completedCount,\n          total: medicineEvents.length\n        });\n      }\n    });\n    return Array.from(uniqueMedicines.values());\n  };\n  const selectedDateEvents = getEventsForDate(selectedDate);\n  const days = getDaysInMonth(currentMonth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041A\\u0430\\u043B\\u0435\\u043D\\u0434\\u0430\\u0440\\u044C \\u043F\\u0440\\u0438\\u0435\\u043C\\u0430 \\u043B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u0440\\u0438\\u0435\\u043C\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-items\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-dot completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u0412\\u0441\\u0435 \\u043F\\u0440\\u0438\\u043D\\u044F\\u0442\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-dot partial\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u0427\\u0430\\u0441\\u0442\\u0438\\u0447\\u043D\\u043E \\u043F\\u0440\\u0438\\u043D\\u044F\\u0442\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-dot pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0435\\u0442 \\u043F\\u0440\\u0438\\u0435\\u043C\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), medicines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u041B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-items\",\n              children: medicines.map((medicine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-dot medicine\",\n                  style: {\n                    backgroundColor: getMedicineColor(medicine.id)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: medicine.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)]\n              }, medicine.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goToPreviousMonth,\n            className: \"nav-btn\",\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: getMonthName(currentMonth)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goToNextMonth,\n            className: \"nav-btn\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-weekdays\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u041F\\u043D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0412\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0421\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0427\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u041F\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0421\\u0431\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0412\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-days\",\n            children: days.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `calendar-day ${!date ? 'empty' : ''}`,\n              onClick: () => date && handleDateClick(date),\n              children: date && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"day-number\",\n                  children: date.getDate()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"medicine-dots\",\n                  children: getUniqueMedicinesForDay(date).map((medicine, dotIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `medicine-dot ${medicine.completed === medicine.total ? 'completed' : medicine.completed > 0 ? 'partial' : 'pending'}`,\n                    style: {\n                      backgroundColor: medicine.color\n                    },\n                    title: `${medicine.name}: ${medicine.completed}/${medicine.total}`\n                  }, medicine.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u043D\\u0430 \", formatDate(selectedDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), selectedDateEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-events\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-events-icon\",\n          children: \"\\uD83D\\uDC8A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0430 \\u044D\\u0442\\u043E\\u0442 \\u0434\\u0435\\u043D\\u044C \\u043D\\u0435\\u0442 \\u0437\\u0430\\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u0438\\u0435\\u043C\\u043E\\u0432 \\u043B\\u0435\\u043A\\u0430\\u0440\\u0441\\u0442\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-list\",\n        children: selectedDateEvents.sort((a, b) => a.timeOfDay.localeCompare(b.timeOfDay)).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `event-item ${event.isCompleted ? 'completed' : ''}`,\n          onClick: () => handleEventToggle(event.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-icon\",\n              children: \"\\u23F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: event.timeOfDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"event-medicine\",\n              children: event.medicineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"event-dosage\",\n              children: event.dosage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-status\",\n            children: event.isCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-icon completed\",\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-icon pending\",\n              children: \"\\u2B55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 19\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCalendar, \"Q8of5kPJx/L76S55ZxaJFQ4/U6E=\");\n_c = SimpleCalendar;\nexport default SimpleCalendar;\nvar _c;\n$RefreshReg$(_c, \"SimpleCalendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SimpleCalendar","medicines","onEventToggle","completedEvents","Set","_s","selectedDate","setSelectedDate","Date","calendarEvents","setCalendarEvents","currentMonth","setCurrentMonth","events","forEach","medicine","isActive","startDate","endDate","currentDate","timeOfDay","time","push","id","toISOString","split","date","medicineId","medicineName","name","dosage","isCompleted","setDate","getDate","getEventsForDate","filter","event","toDateString","formatDate","toLocaleDateString","day","month","year","getDaysInMonth","getFullYear","getMonth","firstDay","lastDay","daysInMonth","startingDay","getDay","days","adjustedStartingDay","i","getMonthName","goToPreviousMonth","prev","goToNextMonth","handleDateClick","handleEventToggle","eventId","getMedicineColor","colors","medicineIndex","findIndex","m","length","getDayEvents","getUniqueMedicinesForDay","dayEvents","uniqueMedicines","Map","has","medicineEvents","e","completedCount","set","color","completed","total","Array","from","values","selectedDateEvents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","backgroundColor","onClick","dotIndex","title","sort","a","b","localeCompare","_c","$RefreshReg$"],"sources":["C:/Users/omen/Desktop/Medicines track system/src/components/SimpleCalendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Medicine, CalendarEvent } from '../types';\r\nimport './SimpleCalendar.css';\r\n\r\ninterface SimpleCalendarProps {\r\n  medicines: Medicine[];\r\n  onEventToggle: (eventId: string) => void;\r\n  completedEvents?: Set<string>;\r\n}\r\n\r\nconst SimpleCalendar: React.FC<SimpleCalendarProps> = ({\r\n  medicines,\r\n  onEventToggle,\r\n  completedEvents = new Set()\r\n}) => {\r\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\r\n  const [calendarEvents, setCalendarEvents] = useState<CalendarEvent[]>([]);\r\n  const [currentMonth, setCurrentMonth] = useState<Date>(new Date());\r\n\r\n  // Генерируем события календаря на основе лекарств\r\n  useEffect(() => {\r\n    const events: CalendarEvent[] = [];\r\n    \r\n    medicines.forEach(medicine => {\r\n      if (!medicine.isActive) return;\r\n      \r\n      const startDate = new Date(medicine.startDate);\r\n      const endDate = new Date(medicine.endDate);\r\n      const currentDate = new Date(startDate);\r\n      \r\n      while (currentDate <= endDate) {\r\n        medicine.timeOfDay.forEach(time => {\r\n          events.push({\r\n            id: `${medicine.id}-${currentDate.toISOString().split('T')[0]}-${time}`,\r\n            date: new Date(currentDate),\r\n            medicineId: medicine.id,\r\n            medicineName: medicine.name,\r\n            dosage: medicine.dosage,\r\n            timeOfDay: time,\r\n            isCompleted: false\r\n          });\r\n        });\r\n        \r\n        // Переходим к следующему дню\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n    });\r\n    \r\n    setCalendarEvents(events);\r\n  }, [medicines]);\r\n\r\n  const getEventsForDate = (date: Date) => {\r\n    return calendarEvents.filter(event => \r\n      event.date.toDateString() === date.toDateString()\r\n    );\r\n  };\r\n\r\n  const formatDate = (date: Date) => {\r\n    return date.toLocaleDateString('ru-RU', { \r\n      day: 'numeric',\r\n      month: 'long',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getDaysInMonth = (date: Date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const firstDay = new Date(year, month, 1);\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    const daysInMonth = lastDay.getDate();\r\n    const startingDay = firstDay.getDay(); // 0 for Sunday, 1 for Monday, etc.\r\n\r\n    const days = [];\r\n\r\n    // Adjust startingDay for Monday as first day of week (0 for Sunday, 1 for Monday)\r\n    const adjustedStartingDay = startingDay === 0 ? 6 : startingDay - 1;\r\n\r\n    // Добавляем пустые дни в начале месяца\r\n    for (let i = 0; i < adjustedStartingDay; i++) {\r\n      days.push(null);\r\n    }\r\n\r\n    // Добавляем дни месяца\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      days.push(new Date(year, month, i));\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const getMonthName = (date: Date) => {\r\n    return date.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' });\r\n  };\r\n\r\n  const goToPreviousMonth = () => {\r\n    setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() - 1, 1));\r\n  };\r\n\r\n  const goToNextMonth = () => {\r\n    setCurrentMonth(prev => new Date(prev.getFullYear(), prev.getMonth() + 1, 1));\r\n  };\r\n\r\n  const handleDateClick = (date: Date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleEventToggle = (eventId: string) => {\r\n    onEventToggle(eventId);\r\n  };\r\n\r\n  const getMedicineColor = (medicineId: string) => {\r\n    const colors = [\r\n      '#667eea', // синий\r\n      '#10b981', // зеленый\r\n      '#f59e0b', // оранжевый\r\n      '#ef4444', // красный\r\n      '#8b5cf6', // фиолетовый\r\n      '#06b6d4', // голубой\r\n      '#84cc16', // лаймовый\r\n      '#f97316', // оранжевый\r\n      '#ec4899', // розовый\r\n      '#14b8a6', // бирюзовый\r\n    ];\r\n    \r\n    const medicineIndex = medicines.findIndex(m => m.id === medicineId);\r\n    return colors[medicineIndex % colors.length];\r\n  };\r\n\r\n  const getDayEvents = (date: Date) => {\r\n    return getEventsForDate(date);\r\n  };\r\n\r\n  const getUniqueMedicinesForDay = (date: Date) => {\r\n    const dayEvents = getEventsForDate(date);\r\n    const uniqueMedicines = new Map();\r\n    \r\n    dayEvents.forEach(event => {\r\n      if (!uniqueMedicines.has(event.medicineId)) {\r\n        const medicineEvents = dayEvents.filter(e => e.medicineId === event.medicineId);\r\n        const completedCount = medicineEvents.filter(e => completedEvents.has(e.id)).length;\r\n        \r\n        uniqueMedicines.set(event.medicineId, {\r\n          id: event.medicineId,\r\n          name: event.medicineName,\r\n          color: getMedicineColor(event.medicineId),\r\n          completed: completedCount,\r\n          total: medicineEvents.length\r\n        });\r\n      }\r\n    });\r\n    \r\n    return Array.from(uniqueMedicines.values());\r\n  };\r\n\r\n  const selectedDateEvents = getEventsForDate(selectedDate);\r\n  const days = getDaysInMonth(currentMonth);\r\n\r\n  return (\r\n    <div className=\"simple-calendar\">\r\n      <div className=\"calendar-container\">\r\n        <div className=\"calendar-header\">\r\n          <h2>Календарь приема лекарств</h2>\r\n          <div className=\"calendar-legend\">\r\n            <div className=\"legend-section\">\r\n              <h4>Статус приема:</h4>\r\n              <div className=\"legend-items\">\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-dot completed\"></div>\r\n                  <span>Все принято</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-dot partial\"></div>\r\n                  <span>Частично принято</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-dot pending\"></div>\r\n                  <span>Ожидает приема</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {medicines.length > 0 && (\r\n              <div className=\"legend-section\">\r\n                <h4>Лекарства:</h4>\r\n                <div className=\"legend-items\">\r\n                  {medicines.map((medicine, index) => (\r\n                    <div key={medicine.id} className=\"legend-item\">\r\n                      <div \r\n                        className=\"legend-dot medicine\" \r\n                        style={{ backgroundColor: getMedicineColor(medicine.id) }}\r\n                      ></div>\r\n                      <span>{medicine.name}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"calendar-wrapper\">\r\n          <div className=\"calendar-navigation\">\r\n            <button onClick={goToPreviousMonth} className=\"nav-btn\">‹</button>\r\n            <h3>{getMonthName(currentMonth)}</h3>\r\n            <button onClick={goToNextMonth} className=\"nav-btn\">›</button>\r\n          </div>\r\n          \r\n          <div className=\"calendar-grid\">\r\n            <div className=\"calendar-weekdays\">\r\n              <div>Пн</div>\r\n              <div>Вт</div>\r\n              <div>Ср</div>\r\n              <div>Чт</div>\r\n              <div>Пт</div>\r\n              <div>Сб</div>\r\n              <div>Вс</div>\r\n            </div>\r\n            \r\n            <div className=\"calendar-days\">\r\n              {days.map((date, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`calendar-day ${!date ? 'empty' : ''}`}\r\n                  onClick={() => date && handleDateClick(date)}\r\n                >\r\n                  {date && (\r\n                    <>\r\n                      <span className=\"day-number\">{date.getDate()}</span>\r\n                      <div className=\"medicine-dots\">\r\n                        {getUniqueMedicinesForDay(date).map((medicine, dotIndex) => (\r\n                          <div\r\n                            key={medicine.id}\r\n                            className={`medicine-dot ${medicine.completed === medicine.total ? 'completed' : medicine.completed > 0 ? 'partial' : 'pending'}`}\r\n                            style={{ backgroundColor: medicine.color }}\r\n                            title={`${medicine.name}: ${medicine.completed}/${medicine.total}`}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"events-panel\">\r\n        <div className=\"events-header\">\r\n          <h3>События на {formatDate(selectedDate)}</h3>\r\n        </div>\r\n        \r\n        {selectedDateEvents.length === 0 ? (\r\n          <div className=\"no-events\">\r\n            <div className=\"no-events-icon\">💊</div>\r\n            <p>На этот день нет запланированных приемов лекарств</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"events-list\">\r\n            {selectedDateEvents\r\n              .sort((a, b) => a.timeOfDay.localeCompare(b.timeOfDay))\r\n              .map(event => (\r\n                <div \r\n                  key={event.id} \r\n                  className={`event-item ${event.isCompleted ? 'completed' : ''}`}\r\n                  onClick={() => handleEventToggle(event.id)}\r\n                >\r\n                  <div className=\"event-time\">\r\n                    <div className=\"time-icon\">⏰</div>\r\n                    <span>{event.timeOfDay}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"event-content\">\r\n                    <h4 className=\"event-medicine\">{event.medicineName}</h4>\r\n                    <p className=\"event-dosage\">{event.dosage}</p>\r\n                  </div>\r\n                  \r\n                  <div className=\"event-status\">\r\n                    {event.isCompleted ? (\r\n                      <div className=\"status-icon completed\">✅</div>\r\n                    ) : (\r\n                      <div className=\"status-icon pending\">⭕</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}